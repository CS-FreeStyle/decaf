bin_SCRIPTS = \
	array1.test \
	array2.test \
	array3.test \
	array4.test \
	blackjack.test \
	class1.test \
	class2.test \
	class3.test \
	class4.test \
	class5.test \
	class6.test \
	class7.test \
	constants1.test \
	constants2.test \
	constants3.test \
	for1.test \
	for2.test \
	for3.test \
	for4.test \
	for5.test \
	for6.test \
	function1.test \
	function2.test \
	function3.test \
	function4.test \
	function6.test \
	if1.test \
	if2.test \
	if3.test \
	if4.test \
	if5.test \
	inherit1.test \
	inherit2.test \
	inherit3.test \
	inherit4.test \
	inherit5.test \
	inherit6.test \
	io1.test \
	io2.test \
	io3.test \
	link1.test \
	link2.test \
	link3.test \
	op1.test \
	op10.test \
	op11.test \
	op2.test \
	op3.test \
	op4.test \
	op5.test \
	op6.test \
	op7.test \
	op8.test \
	op9.test \
	queue.test \
	rec.test \
	rterror1.test \
	rterror2.test \
	rterror3.test \
	rterror4.test \
	sort.test \
	stack.test \
	string1.test \
	string2.test \
	string3.test \
	var1.test \
	var2.test \
	var3.test \
	var4.test \
	var5.test \
	while1.test \
	while2.test \
	while3.test \
	while4.test \
	while5.test

TESTS = $(bin_SCRIPTS)

TESTS_ENVIRONMENT = top_builddir=$(top_builddir/tests/codegen

EXTRA_DIST = $(TESTS) *.out *.decaf *.in gentest.pl

clean-local:
	rm -rf *.err *.put *.test

GEN = ./gentest.pl

array1.test:
	$(AM_V_GEN)$(GEN) -f array1 -e decaf && chmod +x array1.test

array2.test:
	$(AM_V_GEN)$(GEN) -f array2 -e decaf && chmod +x array2.test

array3.test:
	$(AM_V_GEN)$(GEN) -f array3 -e decaf && chmod +x array3.test

array4.test:
	$(AM_V_GEN)$(GEN) -f array4 -e decaf && chmod +x array4.test

blackjack.test:
	$(AM_V_GEN)$(GEN) -f blackjack -e decaf && chmod +x blackjack.test

class1.test:
	$(AM_V_GEN)$(GEN) -f class1 -e decaf && chmod +x class1.test

class2.test:
	$(AM_V_GEN)$(GEN) -f class2 -e decaf && chmod +x class2.test

class3.test:
	$(AM_V_GEN)$(GEN) -f class3 -e decaf && chmod +x class3.test

class4.test:
	$(AM_V_GEN)$(GEN) -f class4 -e decaf && chmod +x class4.test

class5.test:
	$(AM_V_GEN)$(GEN) -f class5 -e decaf && chmod +x class5.test

class6.test:
	$(AM_V_GEN)$(GEN) -f class6 -e decaf && chmod +x class6.test

class7.test:
	$(AM_V_GEN)$(GEN) -f class7 -e decaf && chmod +x class7.test

constants1.test:
	$(AM_V_GEN)$(GEN) -f constants1 -e decaf && chmod +x constants1.test

constants2.test:
	$(AM_V_GEN)$(GEN) -f constants2 -e decaf && chmod +x constants2.test

constants3.test:
	$(AM_V_GEN)$(GEN) -f constants3 -e decaf && chmod +x constants3.test

for1.test:
	$(AM_V_GEN)$(GEN) -f for1 -e decaf && chmod +x for1.test

for2.test:
	$(AM_V_GEN)$(GEN) -f for2 -e decaf && chmod +x for2.test

for3.test:
	$(AM_V_GEN)$(GEN) -f for3 -e decaf && chmod +x for3.test

for4.test:
	$(AM_V_GEN)$(GEN) -f for4 -e decaf && chmod +x for4.test

for5.test:
	$(AM_V_GEN)$(GEN) -f for5 -e decaf && chmod +x for5.test

for6.test:
	$(AM_V_GEN)$(GEN) -f for6 -e decaf && chmod +x for6.test

function1.test:
	$(AM_V_GEN)$(GEN) -f function1 -e decaf && chmod +x function1.test

function2.test:
	$(AM_V_GEN)$(GEN) -f function2 -e decaf && chmod +x function2.test

function3.test:
	$(AM_V_GEN)$(GEN) -f function3 -e decaf && chmod +x function3.test

function4.test:
	$(AM_V_GEN)$(GEN) -f function4 -e decaf && chmod +x function4.test

function6.test:
	$(AM_V_GEN)$(GEN) -f function6 -e decaf && chmod +x function6.test

if1.test:
	$(AM_V_GEN)$(GEN) -f if1 -e decaf && chmod +x if1.test

if2.test:
	$(AM_V_GEN)$(GEN) -f if2 -e decaf && chmod +x if2.test

if3.test:
	$(AM_V_GEN)$(GEN) -f if3 -e decaf && chmod +x if3.test

if4.test:
	$(AM_V_GEN)$(GEN) -f if4 -e decaf && chmod +x if4.test

if5.test:
	$(AM_V_GEN)$(GEN) -f if5 -e decaf && chmod +x if5.test

inherit1.test:
	$(AM_V_GEN)$(GEN) -f inherit1 -e decaf && chmod +x inherit1.test

inherit2.test:
	$(AM_V_GEN)$(GEN) -f inherit2 -e decaf && chmod +x inherit2.test

inherit3.test:
	$(AM_V_GEN)$(GEN) -f inherit3 -e decaf && chmod +x inherit3.test

inherit4.test:
	$(AM_V_GEN)$(GEN) -f inherit4 -e decaf && chmod +x inherit4.test

inherit5.test:
	$(AM_V_GEN)$(GEN) -f inherit5 -e decaf && chmod +x inherit5.test

inherit6.test:
	$(AM_V_GEN)$(GEN) -f inherit6 -e decaf && chmod +x inherit6.test

io1.test:
	$(AM_V_GEN)$(GEN) -f io1 -e decaf && chmod +x io1.test

io2.test:
	$(AM_V_GEN)$(GEN) -f io2 -e decaf && chmod +x io2.test

io3.test:
	$(AM_V_GEN)$(GEN) -f io3 -e decaf && chmod +x io3.test

link1.test:
	$(AM_V_GEN)$(GEN) -f link1 -e decaf && chmod +x link1.test

link2.test:
	$(AM_V_GEN)$(GEN) -f link2 -e decaf && chmod +x link2.test

link3.test:
	$(AM_V_GEN)$(GEN) -f link3 -e decaf && chmod +x link3.test

op1.test:
	$(AM_V_GEN)$(GEN) -f op1 -e decaf && chmod +x op1.test

op10.test:
	$(AM_V_GEN)$(GEN) -f op10 -e decaf && chmod +x op10.test

op11.test:
	$(AM_V_GEN)$(GEN) -f op11 -e decaf && chmod +x op11.test

op2.test:
	$(AM_V_GEN)$(GEN) -f op2 -e decaf && chmod +x op2.test

op3.test:
	$(AM_V_GEN)$(GEN) -f op3 -e decaf && chmod +x op3.test

op4.test:
	$(AM_V_GEN)$(GEN) -f op4 -e decaf && chmod +x op4.test

op5.test:
	$(AM_V_GEN)$(GEN) -f op5 -e decaf && chmod +x op5.test

op6.test:
	$(AM_V_GEN)$(GEN) -f op6 -e decaf && chmod +x op6.test

op7.test:
	$(AM_V_GEN)$(GEN) -f op7 -e decaf && chmod +x op7.test

op8.test:
	$(AM_V_GEN)$(GEN) -f op8 -e decaf && chmod +x op8.test

op9.test:
	$(AM_V_GEN)$(GEN) -f op9 -e decaf && chmod +x op9.test

queue.test:
	$(AM_V_GEN)$(GEN) -f queue -e decaf && chmod +x queue.test

rec.test:
	$(AM_V_GEN)$(GEN) -f rec -e decaf && chmod +x rec.test

rterror1.test:
	$(AM_V_GEN)$(GEN) -f rterror1 -e decaf && chmod +x rterror1.test

rterror2.test:
	$(AM_V_GEN)$(GEN) -f rterror2 -e decaf && chmod +x rterror2.test

rterror3.test:
	$(AM_V_GEN)$(GEN) -f rterror3 -e decaf && chmod +x rterror3.test

rterror4.test:
	$(AM_V_GEN)$(GEN) -f rterror4 -e decaf && chmod +x rterror4.test

sort.test:
	$(AM_V_GEN)$(GEN) -f sort -e decaf && chmod +x sort.test

stack.test:
	$(AM_V_GEN)$(GEN) -f stack -e decaf && chmod +x stack.test

string1.test:
	$(AM_V_GEN)$(GEN) -f string1 -e decaf && chmod +x string1.test

string2.test:
	$(AM_V_GEN)$(GEN) -f string2 -e decaf && chmod +x string2.test

string3.test:
	$(AM_V_GEN)$(GEN) -f string3 -e decaf && chmod +x string3.test

var1.test:
	$(AM_V_GEN)$(GEN) -f var1 -e decaf && chmod +x var1.test

var2.test:
	$(AM_V_GEN)$(GEN) -f var2 -e decaf && chmod +x var2.test

var3.test:
	$(AM_V_GEN)$(GEN) -f var3 -e decaf && chmod +x var3.test

var4.test:
	$(AM_V_GEN)$(GEN) -f var4 -e decaf && chmod +x var4.test

var5.test:
	$(AM_V_GEN)$(GEN) -f var5 -e decaf && chmod +x var5.test

while1.test:
	$(AM_V_GEN)$(GEN) -f while1 -e decaf && chmod +x while1.test

while2.test:
	$(AM_V_GEN)$(GEN) -f while2 -e decaf && chmod +x while2.test

while3.test:
	$(AM_V_GEN)$(GEN) -f while3 -e decaf && chmod +x while3.test

while4.test:
	$(AM_V_GEN)$(GEN) -f while4 -e decaf && chmod +x while4.test

while5.test:
	$(AM_V_GEN)$(GEN) -f while5 -e decaf && chmod +x while5.test

